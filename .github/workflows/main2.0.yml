name: Auto Update MoneyPrinterTurbo

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * *"  # 每天凌晨1点运行
  workflow_dispatch:
    inputs:
      force_update:
        description: '强制更新（即使版本相同）'
        required: false
        type: boolean

permissions:
  contents: write
  issues: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录

      - name: 设置环境变量
        run: |
          echo "REPO_OWNER=harry0703" >> $GITHUB_ENV
          echo "REPO_NAME=MoneyPrinterTurbo" >> $GITHUB_ENV
          echo "TARGET_FILE=MoneyPrinterTurbo.zip" >> $GITHUB_ENV  # 根据实际文件名调整

      - name: 检查并更新Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 日志函数
          log() { echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"; }

          log "开始检查更新..."

          # 获取本地版本
          LOCAL_VERSION=$(cat version.txt 2>/dev/null || echo "0.0.0")
          log "本地版本: ${LOCAL_VERSION}"

          # 获取最新Release
          log "获取最新Release信息..."
          API_URL="https://api.github.com/repos/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/releases/latest"
          RESPONSE=$(curl -s --retry 3 -H "Authorization: token $GITHUB_TOKEN" "$API_URL")
          
          if [ $? -ne 0 ]; then
            log "ERROR: 无法访问GitHub API"
            exit 1
          fi

          TAG_NAME=$(echo "$RESPONSE" | jq -r '.tag_name')
          DOWNLOAD_URL=$(echo "$RESPONSE" | jq -r ".assets[] | select(.name == \"${{ env.TARGET_FILE }}\") | .browser_download_url")

          if [ -z "$DOWNLOAD_URL" ]; then
            log "ERROR: 未找到 ${{ env.TARGET_FILE }}"
            exit 1
          fi
          log "最新版本: $TAG_NAME"

          # 版本比较
          if [ "$LOCAL_VERSION" = "$TAG_NAME" ] && [ "${{ github.event.inputs.force_update }}" != "true" ]; then
            log "已是最新版本，无需更新"
            exit 0
          fi

          # 下载并更新
          log "下载 ${{ env.TARGET_FILE }}..."
          wget -q --show-progress -O "${{ env.TARGET_FILE }}" "$DOWNLOAD_URL"
          
          # 解压文件（根据实际压缩格式调整）
          case "${{ env.TARGET_FILE }}" in
            *.zip)
              unzip -o "${{ env.TARGET_FILE }}"
              ;;
            *.tar.gz)
              tar -xzvf "${{ env.TARGET_FILE }}"
              ;;
            *)
              log "未知压缩格式: ${{ env.TARGET_FILE }}"
              exit 1
          esac

          # 清理旧文件
          find . -maxdepth 1 ! -name '*.md' ! -name 'LICENSE' ! -name '.git' ! -name 'version.txt' -exec rm -rf {} \;

          # 移动解压内容
          mv MoneyPrinterTurbo/* .  # 根据实际目录结构调整
          rm -rf MoneyPrinterTurbo

          # 更新版本文件
          echo "$TAG_NAME" > version.txt
          log "更新完成，新版本: $TAG_NAME"

      - name: 提交更改
        if: success()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔄 自动同步MoneyPrinterTurbo版本: ${{ env.TAG_NAME }}"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          branch: main

      - name: 失败通知
        if: ${{ failure() }}
        uses: imjohnbo/issue-bot@v3
        with:
          title: "更新失败警报 ⚠️"
          body: |
            自动更新MoneyPrinterTurbo失败，请检查：
            1. 网络连接
            2. 仓库权限
            3. Release资产完整性
            最新日志：${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          assignees: ${{ github.actor }}
          labels: "update-failed,bug"
