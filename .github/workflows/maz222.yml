name: 同步资产与更新日志（v2rayNG版）
on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 1 * * name: 同步资产与更新日志（v2rayNG版）
on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 1 * * *" # 每天凌晨1点运行（UTC+8）
  workflow_dispatch:
    inputs:
      force_update:
        description: '是否强制更新（忽略版本检查）'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 创建版本文件夹
        id: create-folder
        run: |
          # 获取动态版本号
          REPO_OWNER="2dust"
          REPO_NAME="v2rayNG"
          response=$(curl -s https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/releases/latest)
          TAG_NAME=$(echo "$response" | jq -r '.tag_name')
          
          # 创建目录结构
          mkdir -p "assets/${TAG_NAME}"
          echo "✅ 创建文件夹: assets/${TAG_NAME}"
          
          # 输出变量供后续步骤使用
          echo "ASSETS_DIR=assets/${TAG_NAME}" >> $GITHUB_ENV

      - name: 下载最新资产
        id: download-assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          REPO_OWNER="2dust"
          REPO_NAME="v2rayNG"
          
          response=$(curl -s https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/releases/latest)
          TAG_NAME=$(echo "$response" | jq -r '.tag_name')
          ASSETS=($(echo "$response" | jq -r '.assets[].name'))

          for asset in "${ASSETS[@]}"; do
            DOWNLOAD_URL=$(echo "$response" | jq -r ".assets[] | select(.name == \"$asset\") | .browser_download_url")
            # 下载到版本文件夹
            wget -q --show-progress "$DOWNLOAD_URL" -P "${{ env.ASSETS_DIR }}"
            echo "已保存到: ${{ env.ASSETS_DIR }}/$asset"
          done

          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "ASSETS=$(echo ${ASSETS[*]})" >> $GITHUB_OUTPUT

      - name: 同步更新日志
        id: update-log
        run: |
          set -euo pipefail
          FORCE_UPDATE=${{ github.event.inputs.force_update || 'false' }}
          LOCAL_VERSION=$(cat version.txt 2>/dev/null || echo "")
          REPO_OWNER="2dust"
          REPO_NAME="v2rayNG"

          response=$(curl -s https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/releases/latest)
          TAG_NAME=$(echo "$response" | jq -r '.tag_name')
          RELEASE_NOTES=$(echo "$response" | jq -r '.body')

          if [ "$LOCAL_VERSION" = "$TAG_NAME" ] && [ "$FORCE_UPDATE" != "true" ]; then
            echo "✅ 已是最新版本（$TAG_NAME），无需更新"
            exit 0
          fi

          TRANSLATED_NOTES=$(echo "$RELEASE_NOTES" | trans -b -e google -t zh-CN || echo "$RELEASE_NOTES")
          echo "$TAG_NAME" > version.txt
          echo -e "## 📅 更新日志\n### $TAG_NAME\n$TRANSLATED_NOTES" >> README.md

      - name: 提交所有文件
        if: always()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: |
            🔄 同步 ${TAG_NAME} 资产与日志
            资产目录: ${{ env.ASSETS_DIR }}
          files: |
            assets/**  # 匹配所有版本文件夹
            version.txt
            README.md" # 每天凌晨1点运行（UTC+8）
  workflow_dispatch:
    inputs:
      force_update:
        description: '是否强制更新（忽略版本检查）'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # 浅克隆加速

      - name: 安装依赖
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget jq translate-shell unzip

      - name: 下载最新资产
        id: download-assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          REPO_OWNER="2dust"          # 修改为目标仓库所有者
          REPO_NAME="v2rayNG"         # 修改为目标仓库名
          response=$(curl -s https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/releases/latest)
          TAG_NAME=$(echo "$response" | jq -r '.tag_name')
          ASSETS=($(echo "$response" | jq -r '.assets[].name'))

          for asset in "${ASSETS[@]}"; do
            DOWNLOAD_URL=$(echo "$response" | jq -r ".assets[] | select(.name == \"$asset\") | .browser_download_url")
            wget -q --show-progress "$DOWNLOAD_URL" -O "$asset"
            echo "已下载: $asset"
          done

          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "ASSETS=$(echo ${ASSETS[*]})" >> $GITHUB_OUTPUT # 追加资产列表输出

      - name: 同步更新日志
        id: update-log
        run: |
          set -euo pipefail
          FORCE_UPDATE=${{ github.event.inputs.force_update || 'false' }}
          LOCAL_VERSION=$(cat version.txt 2>/dev/null || echo "")
          REPO_OWNER="2dust"          # 修改为目标仓库所有者
          REPO_NAME="v2rayNG"         # 修改为目标仓库名

          response=$(curl -s https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/releases/latest)
          TAG_NAME=$(echo "$response" | jq -r '.tag_name')
          RELEASE_NOTES=$(echo "$response" | jq -r '.body')

          # 版本对比逻辑
          if [ "$LOCAL_VERSION" = "$TAG_NAME" ] && [ "$FORCE_UPDATE" != "true" ]; then
            echo "✅ 已是最新版本（$TAG_NAME），无需更新"
            exit 0
          fi

          # 翻译日志（可选，保留英文可删除此行）
          TRANSLATED_NOTES=$(echo "$RELEASE_NOTES" | trans -b -e google -t zh-CN || echo "$RELEASE_NOTES")

          # 更新版本文件和README
          echo "$TAG_NAME" > version.txt
          echo -e "## 📅 更新日志\n### $TAG_NAME\n$TRANSLATED_NOTES" >> README.md

      - name: 提交所有文件
        if: always()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: |
            🔄 同步 ${TAG_NAME} 资产与日志
            资产: ${{ steps.download-assets.outputs.ASSETS }} # 引用资产列表
          files: |
            *.apk         # v2rayNG常见资产格式（可根据实际调整）
            *.zip         # 保留通用格式
            version.txt   
            README.md
