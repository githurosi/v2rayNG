name: 同步资产与更新日志（v2rayNG版）
on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 1 * * *"  # 每天凌晨1点运行 (UTC+8)
  workflow_dispatch:
    inputs:
      force_update:
        description: '是否强制更新（忽略版本检查）'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 获取最新稳定版
      - name: 获取最新版本信息
        id: latest-release
        run: |
          response=$(curl -s https://api.github.com/repos/2dust/v2rayNG/releases/latest)
          echo "TAG_NAME=$(echo "$response" | jq -r '.tag_name')" >> $GITHUB_OUTPUT
          echo "LATEST_ASSETS=$(echo "$response" | jq -r '.assets[].name')" >> $GITHUB_OUTPUT

      # 创建最新版本目录
      - name: 创建最新版本目录
        run: |
          mkdir -p "最新版本/${{ steps.latest-release.outputs.TAG_NAME }}"
          echo "✅ 创建最新版本文件夹: 最新版本/${{ steps.latest-release.outputs.TAG_NAME }}"

      # 下载最新版本资产
      - name: 下载最新版本资产
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for asset in ${{ steps.latest-release.outputs.LATEST_ASSETS }};
          do
            DOWNLOAD_URL=$(curl -s https://api.github.com/repos/2dust/v2rayNG/releases/latest \
              | jq -r ".assets[] | select(.name == \"$asset\") | .browser_download_url")
            wget -q --show-progress "$DOWNLOAD_URL" -P "最新版本/${{ steps.latest-release.outputs.TAG_NAME }}"
          done

      # 获取预发布版本
      - name: 获取预发布版本信息
        id: pre-release
        run: |
          response=$(curl -s https://api.github.com/repos/2dust/v2rayNG/releases?per_page=100)
          PRE_TAG_NAME=$(echo "$response" | jq -r '.[] | select(.prerelease == true) | .tag_name' | head -n 1)
          if [ ! -z "$PRE_TAG_NAME" ]; then
            echo "PRE_TAG_NAME=$PRE_TAG_NAME" >> $GITHUB_OUTPUT
            echo "PRE_ASSETS=$(echo "$response" | jq -r --arg tag "$PRE_TAG_NAME" '.[] | select(.tag_name == $tag) | .assets[].name')" >> $GITHUB_OUTPUT
          fi

      # 创建预发布目录
      - name: 创建预发布目录
        if: steps.pre-release.outputs.PRE_TAG_NAME != ''
        run: |
          mkdir -p "预发布/${{ steps.pre-release.outputs.PRE_TAG_NAME }}"
          echo "✅ 创建预发布文件夹: 预发布/${{ steps.pre-release.outputs.PRE_TAG_NAME }}"

      # 下载预发布版本资产
      - name: 下载预发布版本资产
        if: steps.pre-release.outputs.PRE_TAG_NAME != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for asset in ${{ steps.pre-release.outputs.PRE_ASSETS }};
          do
            DOWNLOAD_URL=$(curl -s https://api.github.com/repos/2dust/v2rayNG/releases/latest \
              | jq -r --arg tag "${{ steps.pre-release.outputs.PRE_TAG_NAME }}" \
              '.[] | select(.tag_name == $tag) | .assets[] | select(.name == \"$asset\") | .browser_download_url')
            wget -q --show-progress "$DOWNLOAD_URL" -P "预发布/${{ steps.pre-release.outputs.PRE_TAG_NAME }}"
          done

      # 同步更新日志
      - name: 同步更新日志
        id: update-log
        run: |
          FORCE_UPDATE=${{ github.event.inputs.force_update || 'false' }}
          LOCAL_VERSION=$(cat version.txt 2>/dev/null || echo "")
          LATEST_TAG=$(curl -s https://api.github.com/repos/2dust/v2rayNG/releases/latest | jq -r '.tag_name')

          if [ "$LOCAL_VERSION" = "$LATEST_TAG" ] && [ "$FORCE_UPDATE" != "true" ]; then
            echo "✅ 已是最新版本（$LATEST_TAG），无需更新"
            exit 0
          fi

          TRANSLATED_NOTES=$(curl -s https://api.github.com/repos/2dust/v2rayNG/releases/latest | jq -r '.body' | trans -b -e google -t zh-CN || echo "$(curl -s https://api.github.com/repos/2dust/v2rayNG/releases/latest | jq -r '.body')")
          echo "$LATEST_TAG" > version.txt
          echo -e "## 📅 更新日志\n### $LATEST_TAG\n$TRANSLATED_NOTES" >> README.md

      # 提交所有文件
      - name: 提交所有文件
        if: always()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: |
            🔄 同步资产与更新日志
            最新版本: ${{ steps.latest-release.outputs.TAG_NAME }}
            预发布版本: ${{ steps.pre-release.outputs.PRE_TAG_NAME || '无' }}
          files: |
            最新版本/** 
            预发布/**
            version.txt
            README.md
